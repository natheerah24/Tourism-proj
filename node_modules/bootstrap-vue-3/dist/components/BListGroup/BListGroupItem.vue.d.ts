import type { ColorVariant, LinkTarget } from '../../types';
declare const _sfc_main: import("vue").DefineComponent<{
    action: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
    active: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
    button: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
    disabled: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
    href: {
        type: StringConstructor;
        required: false;
    };
    tag: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    target: {
        type: null;
        required: false;
        default: string;
    };
    variant: {
        type: null;
        required: false;
    };
}, {
    props: {
        action: boolean;
        active: boolean;
        button: boolean;
        disabled: boolean;
        href?: string | undefined;
        tag: string;
        target: LinkTarget;
        variant?: ColorVariant | undefined;
    };
    attrs: {
        [x: string]: unknown;
    };
    parentData: import("../../types/components").BListGroupParentData | null;
    link: import("vue").ComputedRef<boolean>;
    tagComputed: import("vue").ComputedRef<string>;
    classes: import("vue").ComputedRef<{
        [x: string]: boolean | ColorVariant | undefined;
        'list-group-item-action': boolean;
        active: boolean;
        disabled: boolean;
    }>;
    computedAttrs: import("vue").ComputedRef<{
        type?: string | undefined;
        disabled?: boolean | undefined;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    action: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
    active: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
    button: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
    disabled: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
    href: {
        type: StringConstructor;
        required: false;
    };
    tag: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    target: {
        type: null;
        required: false;
        default: string;
    };
    variant: {
        type: null;
        required: false;
    };
}>>, {
    tag: string;
    button: boolean;
    disabled: boolean;
    active: boolean;
    target: any;
    action: boolean;
}>;
export default _sfc_main;
